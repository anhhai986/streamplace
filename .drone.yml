clone:
  git:
    image: plugins/git
    tags: true

pipeline:
  build:
    image: streamplace/wheelhouse
    pull: true
    secrets:
      - WH_S3_ACCESS_KEY_ID
      - WH_S3_SECRET_ACCESS_KEY
      - WH_S3_URL
      - WH_DOCKER_AUTH
      - npm_token
    environment:
      - NPM_CONFIG_UNSAFE_PERM=true
    commands:
      - yarn install
      - npm run lint
      - npm run docker-build-ci
      - npm test
      - npx wheelhouse build helm
      - npx wheelhouse push --dist-tag $DRONE_BRANCH
      - npx wheelhouse clean
      - npm config set '//registry.npmjs.org/:_authToken' $NPM_TOKEN
      - npx lerna publish --yes --exact --force-publish --npm-tag $DRONE_BRANCH --skip-git --repo-version $(npx wheelhouse repo-version)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  deploy:
    image: streamplace/wheelhouse
    when:
      branch: next
    environment:
      - KUBECONFIG=/tmp/kubeconfig
    secrets:
      - values_secret_yaml
      - kubeconfig_content
    commands:
      - echo $VALUES_SECRET_YAML | openssl base64 -d -A > values.secret.yaml
      - echo $KUBECONFIG_CONTENT | openssl base64 -d -A > /tmp/kubeconfig
      - helm init --client-only
      - helm repo add streamplace https://s3-api.us-geo.objectstorage.softlayer.net/blobtown.stream.place
      - helm upgrade -f values-next.yaml -f values.secret.yaml --version $(curl --silent https://unpkg.com/streamplace@0.1.10-7e464f90/package.json | jq -r '.version') -i next streamplace/streamplace

  trigger-app-build:
    image: streamplace/wheelhouse
    secrets:
      - certificate_osx_p12
      - circleci_token
      - crap_access_key_id
      - crap_secret_access_key
    commands:
      - run/trigger-circleci-app-build.sh $DRONE_BRANCH $DRONE_COMMIT

  slack:
    image: plugins/slack
    secrets:
      - slack_webhook
    when:
      status:
        - success
        - failure
