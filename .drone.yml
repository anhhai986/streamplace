pipeline:
  # build:
  #   image: streamplace/wheelhouse
  #   pull: true
  #   secrets:
  #     - WH_S3_ACCESS_KEY_ID
  #     - WH_S3_SECRET_ACCESS_KEY
  #     - WH_S3_URL
  #     - WH_DOCKER_AUTH
  #     - npm_token
  #   environment:
  #     - NPM_CONFIG_UNSAFE_PERM=true
  #   commands:
  #     - npm install
  #     - npx wheelhouse build
  #     - npx wheelhouse push
  #     - npx wheelhouse clean
  #     - npm config set '//registry.npmjs.org/:_authToken' $NPM_TOKEN
  #     - npx lerna publish --yes --exact --force-publish --npm-tag $DRONE_BRANCH --skip-git --repo-version $(npx wheelhouse repo-version)
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock

  deploy:
    image: streamplace/wheelhouse
    when:
      branch: next
    environment:
      - KUBECONFIG=/tmp/kubeconfig
    secrets:
      - values_secret_yaml
      - kubeconfig_content
    commands:
      - echo $VALUES_SECRET_YAML | openssl base64 -d > values.secret.yaml
      - echo $KUBECONFIG_CONTENT | openssl base64 -d > /tmp/kubeconfig
      - helm upgrade -f values-next.yaml -f values.secret.yaml --version 0.1.4-fd4023de -i next streamplace/streamplace
      # - helm upgrade -f values-next.yaml -f values.secret.yaml --version $(npm dist-tag ls streamplace | grep next | sed 's/^.*:\ //') -i next streamplace/streamplace

  slack:
    image: plugins/slack
    secrets:
      - slack_webhook
    when:
      status:
        - success
        - failure
